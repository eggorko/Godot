[gd_scene load_steps=44 format=3 uid="uid://dnj5tw13k7c1m"]

[ext_resource type="Texture2D" uid="uid://h4rit3mjq6ys" path="res://Images/Soldier.png" id="1_plp6c"]
[ext_resource type="Texture2D" uid="uid://blukj11qb7kml" path="res://Images/Soldier_With_Effects.png" id="2_4n1ni"]
[ext_resource type="AudioStream" uid="uid://cjrt2sqg34c25" path="res://Sounds/Step1.wav" id="2_jxob3"]
[ext_resource type="AudioStream" uid="uid://bagbqs52vaupt" path="res://Sounds/Step2.wav" id="3_oc68c"]
[ext_resource type="AudioStream" uid="uid://1g52wlnsk73c" path="res://Sounds/Step3.wav" id="4_6qlnp"]
[ext_resource type="AudioStream" uid="uid://6itvxh4obf73" path="res://Sounds/Step4.wav" id="5_03unj"]
[ext_resource type="AudioStream" uid="uid://bgwvq881y6s1g" path="res://Sounds/30_Jump_03.wav" id="6_srp0e"]
[ext_resource type="AudioStream" uid="uid://dm7d3wurj1bao" path="res://Sounds/45_Landing_01.wav" id="7_u4ved"]
[ext_resource type="AudioStream" uid="uid://bhf5lmc1vo83l" path="res://Sounds/56_Attack_03.wav" id="9_ffrn3"]
[ext_resource type="AudioStream" uid="uid://ckhi7fdtl4ncl" path="res://Sounds/rope-tighten-knot-6-199792.mp3" id="10_3sfgi"]

[sub_resource type="GDScript" id="GDScript_gqd8l"]
script/source = "extends CharacterBody2D


const SPEED: float = 100.0
const JUMP_VELOCITY = -250.0

var sm: LimboHSM

var direction = 1;

var attack_speed = 5
var can_attack = true

var footstep_frames: Array = [0,4]

@onready var animated_sprite_2d: AnimatedSprite2D = $AnimatedSprite2D

@onready var footsteps: AudioStreamPlayer2D = $Footsteps

@onready var jump: AudioStreamPlayer2D = $Jump

@onready var land: AudioStreamPlayer2D = $Land

@onready var bow_tigh: AudioStreamPlayer2D = $BowTigh

@onready var bow_sound: AudioStreamPlayer2D = $BowSound

@onready var foot_effects_marker: Marker2D = $FootEffectsMarker

@onready var bow: Marker2D = $Bow

const ARROW = preload(\"res://Scenes/arrow.tscn\")

const FOOT_EFFECT_ANIMATIONS = preload(\"res://Scenes/foot_effect_animations.tscn\")

var was_on_floor: bool = true
var is_facing_right: bool = false
var can_move: bool = true
var is_now_on_floor: bool = false

func _ready() -> void:
	init_state_machine()
	
func _physics_process(delta: float) -> void:

	is_now_on_floor = is_on_floor()
	
	if not is_on_floor():
		velocity += get_gravity() * delta

	if Input.is_action_just_pressed(\"ui_accept\") and is_on_floor():
		velocity.y = JUMP_VELOCITY
		var instanse = FOOT_EFFECT_ANIMATIONS.instantiate()
		get_parent().add_child(instanse)
		instanse.play_jump_effect(foot_effects_marker.global_position)
		sm.dispatch(&\"to_jump\")

	var new_facing_right = direction > 0
	
	if new_facing_right != is_facing_right:
		is_facing_right = new_facing_right
		bow.position.x = bow.position.x * -1	
	
	if Input.get_axis(\"ui_left\", \"ui_right\") != 0 and can_move:
		direction = Input.get_axis(\"ui_left\", \"ui_right\")

	if Input.get_axis(\"ui_left\", \"ui_right\") != 0 and can_move:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)

	if velocity.x != 0 and is_on_floor():
		sm.dispatch(&\"to_run\")

	if Input.is_action_pressed(\"Attack2\") and is_on_floor():
		sm.call_deferred(\"dispatch\", &\"to_aim\")

		#can_attack = false

	
	move_and_slide()

func shoot() -> void:
	var arrow = ARROW.instantiate()
	bow_sound.play()
	get_parent().add_child(arrow)
	arrow.fly(direction)
	can_attack = false
	arrow.global_position = bow.global_position
	arrow.direction = direction

func init_state_machine() -> void:
	sm = LimboHSM.new()
	add_child(sm)
	
	var idle_state = LimboState.new().named(\"Idle\").call_on_enter(idle_state_enter).call_on_update(idle_state_update)
	var run_state = LimboState.new().named(\"Run\").call_on_enter(run_state_enter).call_on_update(run_state_update)
	var jump_state = LimboState.new().named(\"Jump\").call_on_enter(jump_state_enter).call_on_update(jump_state_update)
	var bow_aim_state = LimboState.new().named(\"Bow_Aim\").call_on_enter(bow_aim_state_enter).call_on_update(bow_aim_state_update)
	var bow_drawn_state = LimboState.new().named(\"Bow_Dawn\").call_on_enter(bow_drawn_state_enter).call_on_update(bow_drawn_state_update)
	var bow_shoot_state = LimboState.new().named(\"Bow_Shoot\").call_on_enter(bow_shoot_state_enter).call_on_update(bow_shoot_state_update)

	run_state.set_guard(if_can_run)
	bow_aim_state.set_guard(if_can_attack)
	

	
	sm.add_child(idle_state)
	sm.add_child(run_state)
	sm.add_child(jump_state)
	sm.add_child(bow_aim_state)
	sm.add_child(bow_drawn_state)
	sm.add_child(bow_shoot_state)
	
	sm.add_transition(sm.ANYSTATE, idle_state, &\"state_ended\")
	sm.add_transition(idle_state, run_state, &\"to_run\")
	sm.add_transition(bow_drawn_state, run_state, &\"to_run\")
	sm.add_transition(idle_state, jump_state, &\"to_jump\")
	sm.add_transition(run_state, jump_state, &\"to_jump\")
	sm.add_transition(run_state, bow_aim_state, &\"to_aim\")
	sm.add_transition(idle_state, bow_aim_state, &\"to_aim\")
	sm.add_transition(bow_aim_state, bow_drawn_state, &\"to_drawn\")
	sm.add_transition(bow_drawn_state, bow_shoot_state, &\"to_shoot\")	
	
	idle_state.add_event_handler(&\"to_jump\", _on_run)
	
	sm.initial_state = idle_state
	
	sm.initialize(self)
	sm.set_active(true)	

func if_can_run():
	return is_on_floor()

func if_can_attack():
	return can_attack
	
func _on_run(speed: float) -> bool:
	print(\"Now runing with speed\"+ str(speed))
	return true
	
func attack_cooldown():
	await get_tree().create_timer(1.0 / attack_speed).timeout
	can_attack = true

func bow_aim_state_enter():
	can_move = false
	#print(sm.get_active_state().name)
	animated_sprite_2d.play(\"Bow_Aim\")
		
func bow_aim_state_update(delta: float):
	if Input.is_action_just_released(\"Attack2\") or velocity.y != 0:
		can_move = true
		bow_tigh.stop()
		sm.dispatch(&\"state_ended\")

func bow_aim_state_exit(delta: float):
	print(sm.get_active_state().name)
	
func bow_drawn_state_enter():
	#print(sm.get_active_state().name)
	bow_tigh.stop()
	animated_sprite_2d.play(\"Bow_Drawn\")

func bow_drawn_state_update(delta: float):
	if velocity.x != 0 or velocity.y != 0:
		sm.dispatch(&\"state_ended\")
		can_move = true
	#if Input.is_action_just_released(\"Attack2\"):

func bow_shoot_state_enter():
	#print(sm.get_active_state().name)
	animated_sprite_2d.play(\"Bow_Shoot\")
	shoot()

func bow_shoot_state_update(delta: float):
	pass

func idle_state_enter():
	#print(sm.get_active_state().name)
	animated_sprite_2d.play(\"Idle\")

func idle_state_update(delta: float):
	if velocity.x != 0:
		sm.dispatch(&\"to_run\", SPEED)

func run_state_enter():
	#print(sm.get_active_state().name)
	animated_sprite_2d.play(\"Run\")

func run_state_update(delta: float):
	animated_sprite_2d.flip_h = !is_facing_right
	if velocity.x == 0:
		sm.dispatch(&\"state_ended\")

func jump_state_enter():
	#print(sm.get_active_state().name)
	animated_sprite_2d.play(\"Jump\")
	jump.play()
	 
func jump_state_update(delta: float):
	if !was_on_floor and is_now_on_floor:
		sm.dispatch(&\"state_ended\")
		can_move = true
		var instanse = FOOT_EFFECT_ANIMATIONS.instantiate()
		get_parent().add_child(instanse)
		instanse.play_land_effect(foot_effects_marker.global_position)
		land.play()
		
	was_on_floor = is_now_on_floor

func _on_animated_sprite_2d_frame_changed() -> void:
	if animated_sprite_2d.animation == \"Bow_Aim\":
		if animated_sprite_2d.frame == 3:
			if !bow_tigh.playing:
				bow_tigh.play()
	if animated_sprite_2d.animation == \"Run\":
		if animated_sprite_2d.frame in footstep_frames: footsteps.play()



func _on_animated_sprite_2d_animation_finished() -> void:
	#print(\"Animation Ended: \" + animated_sprite_2d.animation)
	if animated_sprite_2d.animation == \"Bow_Aim\":
		sm.dispatch(&\"to_drawn\")
	if animated_sprite_2d.animation == \"Bow_Shoot\":
		sm.dispatch(&\"state_ended\")
		can_move = true
		attack_cooldown()
	if animated_sprite_2d.animation == \"Bow_Drawn\":
		sm.dispatch(&\"to_shoot\")

func _on_animated_sprite_2d_animation_changed() -> void:
	#print(\"Animation: \" + animated_sprite_2d.animation)
	pass
"

[sub_resource type="CapsuleShape2D" id="CapsuleShape2D_gm165"]
radius = 6.0
height = 16.0

[sub_resource type="AtlasTexture" id="AtlasTexture_5i2sn"]
atlas = ExtResource("1_plp6c")
region = Rect2(0, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_opkkm"]
atlas = ExtResource("1_plp6c")
region = Rect2(100, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_bw0d0"]
atlas = ExtResource("1_plp6c")
region = Rect2(200, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_txsno"]
atlas = ExtResource("1_plp6c")
region = Rect2(300, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_b7mnr"]
atlas = ExtResource("1_plp6c")
region = Rect2(400, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_h6h0b"]
atlas = ExtResource("1_plp6c")
region = Rect2(500, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_ha3i2"]
atlas = ExtResource("1_plp6c")
region = Rect2(600, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_ei0p8"]
atlas = ExtResource("1_plp6c")
region = Rect2(400, 600, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_0rs2a"]
atlas = ExtResource("1_plp6c")
region = Rect2(500, 600, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_p0brw"]
atlas = ExtResource("2_4n1ni")
region = Rect2(700, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_2b3au"]
atlas = ExtResource("2_4n1ni")
region = Rect2(800, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_rj2kt"]
atlas = ExtResource("1_plp6c")
region = Rect2(800, 400, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_hg08a"]
atlas = ExtResource("1_plp6c")
region = Rect2(0, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_eoi28"]
atlas = ExtResource("1_plp6c")
region = Rect2(100, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_hurq7"]
atlas = ExtResource("1_plp6c")
region = Rect2(200, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_bld7l"]
atlas = ExtResource("1_plp6c")
region = Rect2(300, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_v1sci"]
atlas = ExtResource("1_plp6c")
region = Rect2(400, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_eqgmc"]
atlas = ExtResource("1_plp6c")
region = Rect2(500, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_3jp2c"]
atlas = ExtResource("1_plp6c")
region = Rect2(600, 0, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_4hoea"]
atlas = ExtResource("1_plp6c")
region = Rect2(0, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_pmu4m"]
atlas = ExtResource("1_plp6c")
region = Rect2(100, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_kc4k6"]
atlas = ExtResource("1_plp6c")
region = Rect2(200, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_aip1e"]
atlas = ExtResource("1_plp6c")
region = Rect2(300, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_x8p6t"]
atlas = ExtResource("1_plp6c")
region = Rect2(400, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_2bm4f"]
atlas = ExtResource("1_plp6c")
region = Rect2(500, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_ysvnv"]
atlas = ExtResource("1_plp6c")
region = Rect2(600, 100, 100, 100)

[sub_resource type="AtlasTexture" id="AtlasTexture_7x84m"]
atlas = ExtResource("1_plp6c")
region = Rect2(700, 100, 100, 100)

[sub_resource type="SpriteFrames" id="SpriteFrames_s5sug"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_5i2sn")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_opkkm")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bw0d0")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_txsno")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_b7mnr")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_h6h0b")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ha3i2")
}],
"loop": false,
"name": &"Bow_Aim",
"speed": 6.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_ei0p8")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_0rs2a")
}],
"loop": true,
"name": &"Bow_Drawn",
"speed": 2.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_p0brw")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2b3au")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_rj2kt")
}],
"loop": false,
"name": &"Bow_Shoot",
"speed": 12.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_hg08a")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eoi28")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_hurq7")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_bld7l")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_v1sci")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_eqgmc")
}],
"loop": true,
"name": &"Idle",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jp2c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jp2c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jp2c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jp2c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jp2c")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_3jp2c")
}],
"loop": false,
"name": &"Jump",
"speed": 10.0
}, {
"frames": [{
"duration": 1.0,
"texture": SubResource("AtlasTexture_4hoea")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_pmu4m")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_kc4k6")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_aip1e")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_x8p6t")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_2bm4f")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_ysvnv")
}, {
"duration": 1.0,
"texture": SubResource("AtlasTexture_7x84m")
}],
"loop": true,
"name": &"Run",
"speed": 14.0
}]

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_i5c34"]
random_pitch = 2.0
streams_count = 4
stream_0/stream = ExtResource("2_jxob3")
stream_1/stream = ExtResource("3_oc68c")
stream_2/stream = ExtResource("4_6qlnp")
stream_3/stream = ExtResource("5_03unj")

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_8u1ao"]
playback_mode = 1
streams_count = 1
stream_0/stream = ExtResource("6_srp0e")

[sub_resource type="AudioStreamRandomizer" id="AudioStreamRandomizer_krwvs"]
random_pitch = 2.0
streams_count = 1
stream_0/stream = ExtResource("7_u4ved")

[node name="CharacterBody2D" type="CharacterBody2D"]
script = SubResource("GDScript_gqd8l")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0, -1)
shape = SubResource("CapsuleShape2D_gm165")

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
z_index = 2
use_parent_material = true
sprite_frames = SubResource("SpriteFrames_s5sug")
animation = &"Bow_Aim"

[node name="Footsteps" type="AudioStreamPlayer2D" parent="."]
stream = SubResource("AudioStreamRandomizer_i5c34")
volume_db = -10.0
bus = &"SFX"

[node name="Jump" type="AudioStreamPlayer2D" parent="."]
stream = SubResource("AudioStreamRandomizer_8u1ao")
bus = &"SFX"

[node name="Land" type="AudioStreamPlayer2D" parent="."]
stream = SubResource("AudioStreamRandomizer_krwvs")
bus = &"SFX"

[node name="FootEffectsMarker" type="Marker2D" parent="."]
position = Vector2(0, 7)

[node name="Bow" type="Marker2D" parent="."]
position = Vector2(-11, -1)

[node name="BowSound" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("9_ffrn3")
bus = &"SFX"

[node name="BowTigh" type="AudioStreamPlayer2D" parent="."]
stream = ExtResource("10_3sfgi")
volume_db = -15.0
pitch_scale = 1.2
bus = &"SFX"

[connection signal="animation_changed" from="AnimatedSprite2D" to="." method="_on_animated_sprite_2d_animation_changed"]
[connection signal="animation_finished" from="AnimatedSprite2D" to="." method="_on_animated_sprite_2d_animation_finished"]
[connection signal="frame_changed" from="AnimatedSprite2D" to="." method="_on_animated_sprite_2d_frame_changed"]
